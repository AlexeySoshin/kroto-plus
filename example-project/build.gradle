buildscript{
    ext {
        versions = [
                "protoc":     '3.5.1',
                "protobuf":   '3.5.1',
                "grpc":       '1.10.0',
                "kotlin":     '1.2.21',
                "coroutines": '0.22.5',
                "krotoplus": '0.1.0-SNAPSHOT'
        ]
    }

    repositories {
        jcenter()
        mavenCentral()
        flatDir dirs: "../kroto-plus-gradle-plugin/build/libs/"
        flatDir dirs: "../kroto-plus-compiler/build/libs/"
    }

    dependencies{
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
        classpath "com.github.mferrer.krotoplus:kroto-plus-gradle-plugin:${versions.krotoplus}"
        classpath "com.github.mferrer.krotoplus:kroto-plus-compiler:${versions.krotoplus}"
    }
}

apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.mferrer.kroto-plus'
apply plugin: 'idea'
apply plugin: 'kotlin'

group = 'com.github.mferrer.krotoplus'
version = '0.1.0-SNAPSHOT'

kotlin {
    experimental { coroutines 'enable' }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
    mavenCentral()
    flatDir dirs: "../kroto-plus-runtime/build/libs/"
    flatDir dirs: "../kroto-plus-runtime-test/build/libs/"
}


def generatedOutputDir = "$buildDir/generated-sources/main/kotlin"

sourceSets {
    main.kotlin.srcDirs += generatedOutputDir

    main {
        java {
            // Add additional source directory for generated sources
            srcDir generatedOutputDir
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    compile "com.google.protobuf:protobuf-java:${versions.protobuf}"
    compile "com.github.mferrer.krotoplus:kroto-plus-runtime:${versions.krotoplus}"
    compile "com.github.mferrer.krotoplus:kroto-plus-runtime-test:${versions.krotoplus}"

    compile "io.grpc:grpc-protobuf:${versions.grpc}",
            "io.grpc:grpc-stub:${versions.grpc}"

    testCompile "io.grpc:grpc-testing:${versions.grpc}"

    testCompile group: 'junit', name: 'junit', version: '[4,)'
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
        testOutputDir = file("$buildDir/classes/kotlin/test")
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${versions.protoc}"}

    generatedFilesBaseDir = "$buildDir/generated-sources"

    //noinspection GroovyAssignabilityCheck
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${versions.grpc}" }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc { outputSubDir = "java" }
        }
    }
}

krotoPlus{
    //Proto definition source directories, or path to jar containing proto definitions
    sources = [
        "$projectDir/src/main/proto",
        "$buildDir/extracted-include-protos/main"
    ]
    outputDir = "${protobuf.generatedFilesBaseDir}/main/kotlin"
}

task generateKrotoPlusCLIExample {
    doLast {
        javaexec {
            main = '-jar'
            args = [
                    //Path service generator fat jar
                    "${rootProject.projectDir}/kroto-plus-compiler/build/libs/kroto-plus-compiler-${versions.krotoplus}.jar",

                    //Proto definition source directories or path to jar
                    "$projectDir/src/main/proto", "$buildDir/extracted-include-protos/main",

                    //Generated sources output directory
                    "-o", generatedOutputDir
            ]
        }
    }
}