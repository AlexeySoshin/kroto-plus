buildscript{
    ext {
        versions = [
                "protoc":     '3.5.1',
                "protobuf":   '3.5.1',
                "grpc":       '1.10.0',
                "kotlin":     '1.2.51',
                "coroutines": '0.23.4',
                "krotoplus":  '0.1.3-SNAPSHOT'
        ]
    }

    repositories {
        jcenter()
    }
//
//    def isKrotoSnapshot = versions.krotoplus.endsWith("SNAPSHOT")
//    if(isKrotoSnapshot){
//        configurations.all {
//            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//        }
//    }
//
//    dependencies{
//        classpath ("com.github.marcoferrer.krotoplus:kroto-plus-gradle-plugin:${versions.krotoplus}"){
//            changing = isKrotoSnapshot
//        }
//        classpath ("com.github.marcoferrer.krotoplus:kroto-plus-compiler:${versions.krotoplus}"){
//            changing = isKrotoSnapshot
//        }
//    }
}

plugins{
    id 'idea'
    id 'com.google.protobuf' version '0.8.4'
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
}

group = 'com.github.marcoferrer.krotoplus'
version = versions.krotoplus

kotlin {
    experimental { coroutines 'enable' }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
    flatDir dirs: "../kroto-plus-coroutines/build/libs/"
    flatDir dirs: "../kroto-plus-test/build/libs/"
    flatDir dirs: "../kroto-plus-protoc/build/libs/"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    compile "com.google.protobuf:protobuf-java:${versions.protobuf}"
    compile "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:${versions.krotoplus}"
    compile "com.github.marcoferrer.krotoplus:kroto-plus-test:${versions.krotoplus}"

    compile "io.grpc:grpc-protobuf:${versions.grpc}",
            "io.grpc:grpc-stub:${versions.grpc}"

    testCompile "io.grpc:grpc-testing:${versions.grpc}"

    testCompile group: 'junit', name: 'junit', version: '[4,)'
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
        testOutputDir = file("$buildDir/classes/kotlin/test")
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${versions.protoc}"}

    generatedFilesBaseDir = "$buildDir/generated-sources"

    //noinspection GroovyAssignabilityCheck
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${versions.grpc}" }
        kroto { artifact = "com.github.marcoferrer.krotoplus:kroto-plus-protoc:0.1.3-SNAPSHOT:jvm8@jar" }
        krotoExt { artifact = "com.github.marcoferrer.krotoplus:kroto-plus-protoc:0.1.3-SNAPSHOT:jvm8@jar" }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc { outputSubDir = "java" }
            krotoExt {
                outputSubDir = "java"
                option 'extendable-messages|companion_field_name=Kroto'
                option 'extendable-messages|companion_class_name=Kroto'
                option 'extendable-messages|companion_extends=my.custom.RandomClass<{message_type}>'
                option 'extendable-messages|companion_implements=my.custom.RandomClass<{message_type}>'
            }
            kroto {
                outputSubDir = "kotlin"
                option 'grpc-stub-exts|support_coroutines=true'
                option 'builder-lambdas'
                option 'mock-services'
            }

        }
    }
}
